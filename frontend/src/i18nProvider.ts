//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';

const enResources = {
  resources: {
    Users: {
      name: 'Users',
      fields: {
        mobileNumber: 'Mobile Number',
        accountNumber: 'Account Number',
        password: 'Password',
        id: 'id',
      },
    },
    Transactions: {
      name: 'Transactions',
      fields: { earning: 'Earning', amount: 'Amount', id: 'id' },
    },
    Accounts: {
      name: 'Accounts',
      fields: {
        accountNumber: 'Account Number',
        accountHoldersName: 'Account Holders Name',
        bankName: 'Bank Name',
        ifscCode: 'Ifsc Code',
        balance: 'Balance',
        id: 'id',
      },
    },
    Members: {
      name: 'Members',
      fields: {
        memberID: 'Member Id',
        name: 'Name',
        mobileNumber: 'Mobile Number',
        emailAddress: 'Email Address',
        joiningDate: 'Joining Date',
        id: 'id',
      },
    },
  },
};
const frResources = {
  resources: {
    Users: {
      name: 'Users (fr)',
      fields: {
        mobileNumber: 'Mobile Number (fr)',
        accountNumber: 'Account Number (fr)',
        password: 'Password (fr)',
        id: 'id',
      },
    },
    Transactions: {
      name: 'Transactions (fr)',
      fields: { earning: 'Earning (fr)', amount: 'Amount (fr)', id: 'id' },
    },
    Accounts: {
      name: 'Accounts (fr)',
      fields: {
        accountNumber: 'Account Number (fr)',
        accountHoldersName: 'Account Holders Name (fr)',
        bankName: 'Bank Name (fr)',
        ifscCode: 'Ifsc Code (fr)',
        balance: 'Balance (fr)',
        id: 'id',
      },
    },
    Members: {
      name: 'Members (fr)',
      fields: {
        memberID: 'Member Id (fr)',
        name: 'Name (fr)',
        mobileNumber: 'Mobile Number (fr)',
        emailAddress: 'Email Address (fr)',
        joiningDate: 'Joining Date (fr)',
        id: 'id',
      },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);

const translations = { en, fr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Fran√ßais' },
  ],
);
